[EQ, ==, 1][PLUS, +, 1][OR, |, 1][OPENPAR, (, 1][SEMI, ;, 1][IF, if, 1][PUBLIC, public, 1][READ, read, 1]
[NOTEQ, <>, 2][MINUS, -, 2][AND, &, 2][CLOSEPAR, ), 2][COMMA, ,, 2][THEN, then, 2][PRIVATE, private, 2][WRITE, write, 2]
[LT, <, 3][MULT, *, 3][NOT, !, 3][OPENCUBR, {, 3][DOT, ., 3][ELSE, else, 3][FUNC, func, 3][RETURN, return, 3]
[GT, >, 4][DIV, /, 4][CLOSECUBR, }, 4][COLON, :, 4][INTEGER, integer, 4][VAR, var, 4][SELF, self, 4]
[LEQ, <=, 5][ASSIGN, =, 5][OPENSQBR, [, 5][COLONCOLON, ::, 5][FLOAT, float, 5][STRUCT, struct, 5][INHERITS, inherits, 5]
[GEQ, >=, 6][CLOSESQBR, ], 6][ARROW, ->, 6][VOID, void, 6][WHILE, while, 6][LET, let, 6]
[FUNC, func, 7][IMPL, impl, 7]
[INTNUM, 0, 13]
[INTNUM, 1, 14]
[INTNUM, 10, 15]
[INTNUM, 12, 16]
[INTNUM, 123, 17]
[INTNUM, 12345, 18]
[FLOATNUM, 1.23, 20]
[FLOATNUM, 12.34, 21]
[FLOATNUM, 120.34e10, 22]
[FLOATNUM, 12345.6789e-123, 23]
[ID, abc, 25]
[ID, abc1, 26]
[ID, a1bc, 27]
[ID, abc_1abc, 28]
[ID, abc1_abc, 29]
[INLINECMT, // this is an inline commen, 31]
[BLOCKCMT, /* this is a single line block comment */, 33]
[BLOCKCMT, /* this is a \nmultiple line\nblock comment \n*/, 35]
[BLOCKCMT, /* this is an imbricated \n/* block comment\n*/\n*/, 40]
[FLOATNUM, 12.0000012e23410, 47]
[FLOATNUM, 12.123e-0, 48][INTNUM, 123, 48]
[FLOATNUM, 12.123e+0, 49][INTNUM, 12, 49]
[FLOATNUM, 12.123, 50][ID, easports, 50]
[INVALIDCHAR, @, 52][INVALIDCHAR, #, 52][INVALIDCHAR, $, 52][INVALIDCHAR, ', 52][INVALIDCHAR, \, 52][INVALIDCHAR, ~, 52]
[INTNUM, 0, 54][INTNUM, 0, 54]
[INTNUM, 0, 55][INTNUM, 1, 55]
[INTNUM, 0, 56][INTNUM, 10, 56]
[INTNUM, 0, 57][INTNUM, 120, 57]
[INTNUM, 0, 58][INTNUM, 1230, 58]
[INTNUM, 0, 59][INTNUM, 123450, 59]
[INTNUM, 0, 61][FLOATNUM, 1.23, 61]
[INTNUM, 0, 62][FLOATNUM, 12.34, 62]
[FLOATNUM, 12.34, 63][INTNUM, 0, 63]
[INTNUM, 0, 64][FLOATNUM, 12.34, 64][INTNUM, 0, 64]
[INTNUM, 0, 66][FLOATNUM, 12.34e10, 66]
[FLOATNUM, 12.34e0, 67][INTNUM, 10, 67]
[INVALIDCHAR, _, 69][ID, abc, 69]
[INTNUM, 1, 70][ID, abc, 70]
[INVALIDCHAR, _, 71][INTNUM, 1, 71][ID, abc, 71]